<?php
/**
 * ServiceSpecificationCommercePropertiesDto
 *
 * PHP version 5
 *
 * @category Class
 * @package  Dangl\AVACloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * AVACloud API 1.52.1
 *
 * AVACloud API specification
 *
 * OpenAPI spec version: 1.52.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.41
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Dangl\AVACloud\Model;

use \ArrayAccess;
use \Dangl\AVACloud\ObjectSerializer;

/**
 * ServiceSpecificationCommercePropertiesDto Class Doc Comment
 *
 * @category Class
 * @description This class represents properties used in commerce exchange scenarios
 * @package  Dangl\AVACloud
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ServiceSpecificationCommercePropertiesDto implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ServiceSpecificationCommercePropertiesDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'fixed_price_date' => '\DateTime',
        'delivery_voucher_date' => '\DateTime',
        'delivery_date' => '\DateTime',
        'inquiry_number' => 'string',
        'offer_number' => 'string',
        'order_number' => 'string',
        'order_confirmation_number' => 'string',
        'delivery_number' => 'string',
        'customer_reference_number' => 'string',
        'supplier_reference_number' => 'string',
        'shipping_type' => 'string',
        'inquiry_type' => '\Dangl\AVACloud\Model\CommerceInquiryTypeDto'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'fixed_price_date' => 'date-time',
        'delivery_voucher_date' => 'date-time',
        'delivery_date' => 'date-time',
        'inquiry_number' => null,
        'offer_number' => null,
        'order_number' => null,
        'order_confirmation_number' => null,
        'delivery_number' => null,
        'customer_reference_number' => null,
        'supplier_reference_number' => null,
        'shipping_type' => null,
        'inquiry_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'fixed_price_date' => 'fixedPriceDate',
        'delivery_voucher_date' => 'deliveryVoucherDate',
        'delivery_date' => 'deliveryDate',
        'inquiry_number' => 'inquiryNumber',
        'offer_number' => 'offerNumber',
        'order_number' => 'orderNumber',
        'order_confirmation_number' => 'orderConfirmationNumber',
        'delivery_number' => 'deliveryNumber',
        'customer_reference_number' => 'customerReferenceNumber',
        'supplier_reference_number' => 'supplierReferenceNumber',
        'shipping_type' => 'shippingType',
        'inquiry_type' => 'inquiryType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'fixed_price_date' => 'setFixedPriceDate',
        'delivery_voucher_date' => 'setDeliveryVoucherDate',
        'delivery_date' => 'setDeliveryDate',
        'inquiry_number' => 'setInquiryNumber',
        'offer_number' => 'setOfferNumber',
        'order_number' => 'setOrderNumber',
        'order_confirmation_number' => 'setOrderConfirmationNumber',
        'delivery_number' => 'setDeliveryNumber',
        'customer_reference_number' => 'setCustomerReferenceNumber',
        'supplier_reference_number' => 'setSupplierReferenceNumber',
        'shipping_type' => 'setShippingType',
        'inquiry_type' => 'setInquiryType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'fixed_price_date' => 'getFixedPriceDate',
        'delivery_voucher_date' => 'getDeliveryVoucherDate',
        'delivery_date' => 'getDeliveryDate',
        'inquiry_number' => 'getInquiryNumber',
        'offer_number' => 'getOfferNumber',
        'order_number' => 'getOrderNumber',
        'order_confirmation_number' => 'getOrderConfirmationNumber',
        'delivery_number' => 'getDeliveryNumber',
        'customer_reference_number' => 'getCustomerReferenceNumber',
        'supplier_reference_number' => 'getSupplierReferenceNumber',
        'shipping_type' => 'getShippingType',
        'inquiry_type' => 'getInquiryType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['fixed_price_date'] = isset($data['fixed_price_date']) ? $data['fixed_price_date'] : null;
        $this->container['delivery_voucher_date'] = isset($data['delivery_voucher_date']) ? $data['delivery_voucher_date'] : null;
        $this->container['delivery_date'] = isset($data['delivery_date']) ? $data['delivery_date'] : null;
        $this->container['inquiry_number'] = isset($data['inquiry_number']) ? $data['inquiry_number'] : null;
        $this->container['offer_number'] = isset($data['offer_number']) ? $data['offer_number'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['order_confirmation_number'] = isset($data['order_confirmation_number']) ? $data['order_confirmation_number'] : null;
        $this->container['delivery_number'] = isset($data['delivery_number']) ? $data['delivery_number'] : null;
        $this->container['customer_reference_number'] = isset($data['customer_reference_number']) ? $data['customer_reference_number'] : null;
        $this->container['supplier_reference_number'] = isset($data['supplier_reference_number']) ? $data['supplier_reference_number'] : null;
        $this->container['shipping_type'] = isset($data['shipping_type']) ? $data['shipping_type'] : null;
        $this->container['inquiry_type'] = isset($data['inquiry_type']) ? $data['inquiry_type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['inquiry_type'] === null) {
            $invalidProperties[] = "'inquiry_type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets fixed_price_date
     *
     * @return \DateTime
     */
    public function getFixedPriceDate()
    {
        return $this->container['fixed_price_date'];
    }

    /**
     * Sets fixed_price_date
     *
     * @param \DateTime $fixed_price_date The date until the price is valid or fixed.
     *
     * @return $this
     */
    public function setFixedPriceDate($fixed_price_date)
    {
        $this->container['fixed_price_date'] = $fixed_price_date;

        return $this;
    }

    /**
     * Gets delivery_voucher_date
     *
     * @return \DateTime
     */
    public function getDeliveryVoucherDate()
    {
        return $this->container['delivery_voucher_date'];
    }

    /**
     * Sets delivery_voucher_date
     *
     * @param \DateTime $delivery_voucher_date The date of the delivery voucher note.
     *
     * @return $this
     */
    public function setDeliveryVoucherDate($delivery_voucher_date)
    {
        $this->container['delivery_voucher_date'] = $delivery_voucher_date;

        return $this;
    }

    /**
     * Gets delivery_date
     *
     * @return \DateTime
     */
    public function getDeliveryDate()
    {
        return $this->container['delivery_date'];
    }

    /**
     * Sets delivery_date
     *
     * @param \DateTime $delivery_date The actual date of delivery.
     *
     * @return $this
     */
    public function setDeliveryDate($delivery_date)
    {
        $this->container['delivery_date'] = $delivery_date;

        return $this;
    }

    /**
     * Gets inquiry_number
     *
     * @return string
     */
    public function getInquiryNumber()
    {
        return $this->container['inquiry_number'];
    }

    /**
     * Sets inquiry_number
     *
     * @param string $inquiry_number The number of the inquiry, usually in a context of offer requests.
     *
     * @return $this
     */
    public function setInquiryNumber($inquiry_number)
    {
        $this->container['inquiry_number'] = $inquiry_number;

        return $this;
    }

    /**
     * Gets offer_number
     *
     * @return string
     */
    public function getOfferNumber()
    {
        return $this->container['offer_number'];
    }

    /**
     * Sets offer_number
     *
     * @param string $offer_number The number of the offer, usually in a context of an offer.
     *
     * @return $this
     */
    public function setOfferNumber($offer_number)
    {
        $this->container['offer_number'] = $offer_number;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return string
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param string $order_number The order number, usually in the context of a grant or contract.
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets order_confirmation_number
     *
     * @return string
     */
    public function getOrderConfirmationNumber()
    {
        return $this->container['order_confirmation_number'];
    }

    /**
     * Sets order_confirmation_number
     *
     * @param string $order_confirmation_number The order confirmation number
     *
     * @return $this
     */
    public function setOrderConfirmationNumber($order_confirmation_number)
    {
        $this->container['order_confirmation_number'] = $order_confirmation_number;

        return $this;
    }

    /**
     * Gets delivery_number
     *
     * @return string
     */
    public function getDeliveryNumber()
    {
        return $this->container['delivery_number'];
    }

    /**
     * Sets delivery_number
     *
     * @param string $delivery_number The number of the delivery, e.g. on the delivery note voucher.
     *
     * @return $this
     */
    public function setDeliveryNumber($delivery_number)
    {
        $this->container['delivery_number'] = $delivery_number;

        return $this;
    }

    /**
     * Gets customer_reference_number
     *
     * @return string
     */
    public function getCustomerReferenceNumber()
    {
        return $this->container['customer_reference_number'];
    }

    /**
     * Sets customer_reference_number
     *
     * @param string $customer_reference_number The reference number of the customer / buyer.
     *
     * @return $this
     */
    public function setCustomerReferenceNumber($customer_reference_number)
    {
        $this->container['customer_reference_number'] = $customer_reference_number;

        return $this;
    }

    /**
     * Gets supplier_reference_number
     *
     * @return string
     */
    public function getSupplierReferenceNumber()
    {
        return $this->container['supplier_reference_number'];
    }

    /**
     * Sets supplier_reference_number
     *
     * @param string $supplier_reference_number The reference number of the supplier / bidder.
     *
     * @return $this
     */
    public function setSupplierReferenceNumber($supplier_reference_number)
    {
        $this->container['supplier_reference_number'] = $supplier_reference_number;

        return $this;
    }

    /**
     * Gets shipping_type
     *
     * @return string
     */
    public function getShippingType()
    {
        return $this->container['shipping_type'];
    }

    /**
     * Sets shipping_type
     *
     * @param string $shipping_type The type of shippment.
     *
     * @return $this
     */
    public function setShippingType($shipping_type)
    {
        $this->container['shipping_type'] = $shipping_type;

        return $this;
    }

    /**
     * Gets inquiry_type
     *
     * @return \Dangl\AVACloud\Model\CommerceInquiryTypeDto
     */
    public function getInquiryType()
    {
        return $this->container['inquiry_type'];
    }

    /**
     * Sets inquiry_type
     *
     * @param \Dangl\AVACloud\Model\CommerceInquiryTypeDto $inquiry_type The type of the price inquiry.
     *
     * @return $this
     */
    public function setInquiryType($inquiry_type)
    {
        $this->container['inquiry_type'] = $inquiry_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


